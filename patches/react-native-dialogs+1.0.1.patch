patch-package
--- a/node_modules/react-native-dialogs/android/build.gradle
+++ b/node_modules/react-native-dialogs/android/build.gradle
@@ -31,5 +31,5 @@ dependencies {
     compile 'com.facebook.react:react-native:+'
     compile fileTree(include: ['*.jar'], dir: 'libs')
     testCompile 'junit:junit:4.12'
-    compile 'com.afollestad.material-dialogs:commons:0.9.0.1'
+    compile 'com.afollestad.material-dialogs:commons:0.9.6.0'
 }
--- a/node_modules/react-native-dialogs/android/src/main/java/com/aakashns/reactnativedialogs/modules/DialogAndroid.java
+++ b/node_modules/react-native-dialogs/android/src/main/java/com/aakashns/reactnativedialogs/modules/DialogAndroid.java
@@ -1,6 +1,7 @@
 package com.aakashns.reactnativedialogs.modules;

 import android.content.DialogInterface;
+import android.content.res.ColorStateList;
 import android.graphics.Color;
 import android.text.Html;
 import android.view.View;
@@ -9,6 +10,7 @@ import android.os.Build;
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.GravityEnum;
 import com.afollestad.materialdialogs.MaterialDialog;
+import com.afollestad.materialdialogs.StackingBehavior;
 import com.afollestad.materialdialogs.simplelist.MaterialSimpleListAdapter;
 import com.afollestad.materialdialogs.simplelist.MaterialSimpleListItem;
 import com.facebook.react.bridge.Callback;
@@ -57,6 +59,15 @@ public class DialogAndroid extends ReactContextBaseJavaModule {
                         builder.content(options.getString("content"));
                     }
                     break;
+                case "backgroundColor":
+                    builder.backgroundColor(options.getInt("backgroundColor"));
+                    break;
+                case "buttonRippleColor":
+                    builder.buttonRippleColor(options.getInt("buttonRippleColor"));
+                    break;
+                case "dividerColor":
+                    builder.dividerColor(options.getInt("dividerColor"));
+                    break;
                 case "positiveText":
                     builder.positiveText(options.getString("positiveText"));
                     break;
@@ -81,6 +92,11 @@ public class DialogAndroid extends ReactContextBaseJavaModule {
                 case "widgetColor":
                     builder.widgetColor(options.getInt("widgetColor"));
                     break;
+                case "choiceWidgetColor":
+                    builder.choiceWidgetColor(new ColorStateList(
+                            new int[][] {new int[]{}, new int[]{}},
+                            new int[] {options.getInt("choiceWidgetColor")}));
+                    break;
                 case "linkColor":
                     builder.linkColor(options.getInt("linkColor"));
                     break;
@@ -99,8 +115,11 @@ public class DialogAndroid extends ReactContextBaseJavaModule {
                     builder.autoDismiss(options.getBoolean("autoDismiss"));
                     break;
                 case "forceStacking":
-                    // should change to StackingBehavior? forceStacking is deprecated?
-                    builder.forceStacking(options.getBoolean("forceStacking"));
+                    if (options.getBoolean("forceStacking")) {
+                        builder.stackingBehavior(StackingBehavior.ALWAYS);
+                    } else {
+                        builder.stackingBehavior(StackingBehavior.ADAPTIVE);
+                    }
                     break;
                 case "alwaysCallSingleChoiceCallback":
                     if (options.getBoolean("alwaysCallSingleChoiceCallback")) {
@@ -397,15 +416,16 @@ public class DialogAndroid extends ReactContextBaseJavaModule {
     MaterialDialog simple;
     @ReactMethod
     public void list(ReadableMap options, final Callback callback) {
+
         final MaterialSimpleListAdapter simpleListAdapter = new MaterialSimpleListAdapter(new MaterialSimpleListAdapter.Callback() {
             @Override
-            public void onMaterialListItemSelected(int index, MaterialSimpleListItem item) {
+            public void onMaterialListItemSelected(MaterialDialog mDialog, int index, MaterialSimpleListItem item) {
                 if (!mCallbackConsumed) {
                     mCallbackConsumed = true;
                     callback.invoke(index, item.getContent());
                 }
-                if (simple != null) {
-                    simple.dismiss();
+                if (mDialog != null) {
+                    mDialog.dismiss();
                 }
             }
         });
